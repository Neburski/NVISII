# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # container: 
    #   image: nvidia/cuda:10.2-ubuntu...
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:	
      matrix:	
        os:	
          - ubuntu-18.04
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    # Note, checkout v2 doesn't work with setuptools_scm
    - uses: actions/checkout@v1
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: |
        python -c "import sys; print(sys.version)"
        echo ${pythonLocation}
        echo %pythonLocation%
        ls ${pythonLocation}
        python -m pip install --upgrade pip setuptools setuptools_scm wheel

    # Download external dependencies
    - name: Download Dependencies
      run: |
          # Install CUDA
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
          sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
          sudo add-apt-repository "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
          sudo apt-get update
          sudo apt-get --no-install-recommends -y install cuda-toolkit-10-2
          sudo apt-get --no-install-recommends -y install xorg-dev
          sudo apt-get --no-install-recommends -y install libtbb-dev
          
    - name: Configure and install cmake project
      if: matrix.os == 'ubuntu-18.04'
      run: |
        mkdir build
        cd build
        cmake ../ \
        -DCUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so \
        -DPYTHON_VERSION="${{matrix.python-version}}" \
        -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --target install
        cd ..
        cd install
        python setup.py bdist_wheel

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: visii-${{ matrix.os }}-python${{ matrix.python-version }}
        path: install/dist/*.whl
